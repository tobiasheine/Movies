apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.novoda.build-properties'

buildProperties {
    secrets {
        file rootProject.file('secrets.properties'), '''
           This file should contain the following properties:
           - API_KEY: API key the movie db
        '''
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.3'

    defaultConfig {
        applicationId 'com.tobi.movies'
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName '1.0'
        testApplicationId 'com.tobi.movies.steps'
        testInstrumentationRunner getInstrumentation()
    }
    buildTypes {

        applicationVariants.all { variant ->
            variant.buildConfigField 'String', 'API_KEY', '"' + getApiKey() + '"'
        }

        debug {
            buildConfigField 'String', 'TEST_TAGS', '"' + getTestTags() + '"'
            buildConfigField 'String', 'TEST_FEATURE', '"' + getTestFeature() + '"'
            buildConfigField 'String', 'TEST_SCENARIO', '"' + getTestScenario() + '"'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'

    }
}

def getApiKey() {
    return buildProperties.secrets['API_KEY'].or(buildProperties.env['API_KEY']).string
}

def getTestTags() {
    project.getProperties().get('tags') ?: ''
}

def getTestFeature() {
    project.getProperties().get('feature') ?: ''
}

def getTestScenario() {
    project.getProperties().get('scenario') ?: ''
}

def getInstrumentation() {
    project.hasProperty('cucumber') ? 'com.tobi.movies.utils.CucumberInstrumentation' : 'com.tobi.movies.runner.DaggerOverridesTestRunner'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project(':base')

    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    compile 'io.reactivex:rxjava:1.2.7'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.android.support:support-v4:25.3.1'
    provided 'javax.annotation:javax.annotation-api:1.2'
    compile 'joda-time:joda-time:2.9.4'

    compile 'com.google.dagger:dagger:2.10'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.10'
    androidTestAnnotationProcessor 'com.google.dagger:dagger-compiler:2.10'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.2.29'
    testCompile 'com.google.guava:guava:21.0'

    // Espresso and Cucumber
    androidTestCompile 'com.android.support:support-annotations:25.3.1'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'

    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile 'info.cukes:cucumber-android:1.2.2'
    androidTestCompile 'info.cukes:cucumber-picocontainer:1.2.0'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.1') {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}
repositories {
    mavenCentral()
}
